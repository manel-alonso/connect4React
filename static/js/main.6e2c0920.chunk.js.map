{"version":3,"sources":["components/BoardPiece/BoardPiece.tsx","components/Board/Board.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["BoardPiece","props","type","pieceClass","className","buildBoard","rows","cols","Array","fill","map","Board","React","useState","board","setBoard","currentPlayer","setCurrentPlayer","playOnColumn","column","newBoard","i","checkWin","j","checkVertical","checkHorizontal","checkDiagonal","console","log","row","col","count","onClick","rowIndex","square","colIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e2c0920.chunk.js","sourcesContent":["import React from 'react';\nimport './BoardPiece.css';\n\ninterface BoardPieceProps {\n  type: number;\n}\n\nexport const BoardPiece = (props: BoardPieceProps) => {\n  const { type } = props;\n  const pieceClass = type === 1 ? 'one' : 'two';\n  \n  return (\n    <div className=\"board-piece\">\n      <div className=\"board-piece-hole\"></div>\n        { type > 0 &&\n          <div className={\"board-piece-\" + pieceClass}></div>\n        }\n    </div>\n  );\n};\n","import React from 'react';\nimport './Board.css';\nimport { BoardType } from './BoardType';\nimport { BoardPiece } from '../BoardPiece/BoardPiece';\n\ninterface BoardProps {\n  rows: number;\n  cols: number;\n}\n\nconst buildBoard = (rows: number, cols: number) => {\n  return new Array<number>(rows).fill(0).map(() => new Array<number>(cols).fill(0))\n};\n\n\nexport const Board = (props: BoardProps) => {\n  const { rows, cols } = props;\n  const [ board, setBoard ] = React.useState(buildBoard(rows, cols));\n  const [ currentPlayer, setCurrentPlayer ] = React.useState(1);\n\n  const playOnColumn = (column: number) => {\n    const newBoard = [...board];\n\n    for (let i = rows - 1; i >= 0; i--) {\n      if (newBoard[i][column] === 0) {\n        newBoard[i][column] = currentPlayer;\n        break;\n      }\n    }\n\n    setCurrentPlayer(currentPlayer === 1 ? 2 : 1);\n    setBoard(newBoard);\n    checkWin();\n  }\n\n  const checkWin = () => {\n    // check if 4 columns contain the same player vertically or horizontally or diagonally\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        if (board[i][j] !== 0) {\n          if (checkVertical(i, j) || checkHorizontal(i, j) || checkDiagonal(i, j)) {\n            console.log('player ' + board[i][j] + ' wins!');\n            setBoard(buildBoard(rows, cols));\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  const checkVertical = (row: number, col: number) => {\n    let count = 1;\n    let i = row - 1;\n    while (i >= 0 && board[i][col] === board[row][col]) {\n      count++;\n      i--;\n    }\n    i = row + 1;\n    while (i < rows && board[i][col] === board[row][col]) {\n      count++;\n      i++;\n    }\n    return count >= 4;\n  }\n\n  const checkHorizontal = (row: number, col: number) => {\n    let count = 1;\n    let j = col - 1;\n    while (j >= 0 && board[row][j] === board[row][col]) {\n      count++;\n      j--;\n    }\n    j = col + 1;\n    while (j < cols && board[row][j] === board[row][col]) {\n      count++;\n      j++;\n    }\n    return count >= 4;\n  }\n\n  const checkDiagonal = (row: number, col: number) => {\n    let count = 1;\n    let i = row - 1;\n    let j = col - 1;\n    while (i >= 0 && j >= 0 && board[i][j] === board[row][col]) {\n      count++;\n      i--;\n      j--;\n    }\n    i = row + 1;\n    j = col + 1;\n    while (i < rows && j < cols && board[i][j] === board[row][col]) {\n      count++;\n      i++;\n      j++;\n    }\n    return count >= 4;\n  }\n\n  return (\n    <div className=\"Board\">\n      <div onClick={() => playOnColumn(0)} className={\"play-indicator\" + currentPlayer}></div>\n      <div onClick={() => playOnColumn(1)} className={\"play-indicator\" + currentPlayer}></div>\n      <div onClick={() => playOnColumn(2)} className={\"play-indicator\" + currentPlayer}></div>\n      <div onClick={() => playOnColumn(3)} className={\"play-indicator\" + currentPlayer}></div>\n      <div onClick={() => playOnColumn(4)} className={\"play-indicator\" + currentPlayer}></div>\n      <div onClick={() => playOnColumn(5)} className={\"play-indicator\" + currentPlayer}></div>\n      <div onClick={() => playOnColumn(6)} className={\"play-indicator\" + currentPlayer}></div>\n      {\n        board.map((row, rowIndex) => {\n          return (\n            <div className=\"row\" key={rowIndex}>\n              {\n                row.map((square, colIndex) => {\n                  return (\n                    <BoardPiece type={square}></BoardPiece>\n                  );\n                })\n              }\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n};\n\n","import React from 'react';\nimport './App.css';\nimport { Board } from '../Board/Board';\n\nfunction App() {\n\n  const defaultRows = 6;\n  const defaultColumns = 7;\n\n  return (\n    <div className=\"App\">\n      <Board rows={defaultRows} cols={defaultColumns}></Board>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}